/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package components;

import java.awt.*;
import java.awt.Toolkit;
import java.io.*;
import java.io.File;
import java.io.RandomAccessFile;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.binary.Hex;
import org.apache.commons.io.FileUtils;

/**
 *
 * @author Justin
 */
public class EditorUI extends javax.swing.JFrame {

    /**
     * Creates new form EditorUI
     */
    JFileChooser fc;

    public EditorUI() throws IOException {
        initComponents();
        fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        log.setLineWrap(true);
        log.setFont(new Font("Courier New", Font.PLAIN, 12));
        log.setEditable(false);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc=*****"Generated Code******">                             
    private void initComponents() throws IOException {

        ebootPanel = new javax.swing.JPanel();
        inputTextField = new javax.swing.JTextField();
        outputDirTextField = new javax.swing.JTextField();
        inputLabel = new javax.swing.JLabel();
        outputDirLabel = new javax.swing.JLabel();
        inputBrowseButton = new javax.swing.JButton();
        outputBrowseButton = new javax.swing.JButton();
        outputFileLabel = new javax.swing.JLabel();
        outputFileTextField = new javax.swing.JTextField();
        scriptPanel = new javax.swing.JPanel();
        directoryLabel = new javax.swing.JLabel();
        directoryTextField = new javax.swing.JTextField();
        directoryBrowseButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        log = new javax.swing.JTextArea();
        createFileButton = new javax.swing.JButton();
        
        Image i = ImageIO.read(getClass().getResource("icon.png"));
    	setIconImage(i);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Baka & Test Offset Tool by FShadow");
        setName("mainframe"); // NOI18N
        setResizable(false);

        ebootPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Eboot.bin Input/Output"));
        ebootPanel.setName(""); // NOI18N

        inputTextField.setEditable(false);
        inputTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTextFieldActionPerformed(evt);
            }
        });

        outputDirTextField.setEditable(false);
        outputDirTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputDirTextFieldActionPerformed(evt);
            }
        });

        inputLabel.setText("Input File");
        inputLabel.setToolTipText("Select the EBOOT.BIN that you want to edit");

        outputDirLabel.setText("Output Directory");
        outputDirLabel.setToolTipText("Set the directory to which the newly created EBOOT.BIN will be saved");

        inputBrowseButton.setText("Browse...");
        inputBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputBrowseButtonActionPerformed(evt);
            }
        });

        outputBrowseButton.setText("Browse...");
        outputBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputBrowseButtonActionPerformed(evt);
            }
        });

        outputFileLabel.setText("Output File Name");
        outputFileLabel.setToolTipText("Set the name for the newly created EBOOT file");

        outputFileTextField.setText("EBOOT.BIN");
        outputFileTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputFileTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ebootPanelLayout = new javax.swing.GroupLayout(ebootPanel);
        ebootPanel.setLayout(ebootPanelLayout);
        ebootPanelLayout.setHorizontalGroup(
            ebootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ebootPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ebootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ebootPanelLayout.createSequentialGroup()
                        .addComponent(outputFileLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(outputFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ebootPanelLayout.createSequentialGroup()
                        .addGroup(ebootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputLabel)
                            .addComponent(outputDirLabel))
                        .addGap(18, 18, 18)
                        .addGroup(ebootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(outputDirTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                            .addComponent(inputTextField))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ebootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outputBrowseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputBrowseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        ebootPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {inputTextField, outputDirTextField});

        ebootPanelLayout.setVerticalGroup(
            ebootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ebootPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ebootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputLabel)
                    .addComponent(inputBrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(ebootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputDirLabel)
                    .addComponent(outputBrowseButton))
                .addGap(9, 9, 9)
                .addGroup(ebootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputFileLabel)
                    .addComponent(outputFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        scriptPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Script Directory"));

        directoryLabel.setText("Directory Path");
        directoryLabel.setToolTipText("Set the directory path containing your edited script files");

        directoryTextField.setEditable(false);

        directoryBrowseButton.setText("Browse...");
        directoryBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directoryBrowseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout scriptPanelLayout = new javax.swing.GroupLayout(scriptPanel);
        scriptPanel.setLayout(scriptPanelLayout);
        scriptPanelLayout.setHorizontalGroup(
            scriptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scriptPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(directoryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(directoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(directoryBrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        scriptPanelLayout.setVerticalGroup(
            scriptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scriptPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scriptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(directoryLabel)
                    .addComponent(directoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(directoryBrowseButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Log"));

        log.setColumns(20);
        log.setRows(5);
        jScrollPane1.setViewportView(log);

        createFileButton.setText("Create New File");
        createFileButton.setToolTipText("Creates a new EBOOT.BIN based on the above fields");
        createFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ebootPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scriptPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createFileButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ebootPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scriptPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addContainerGap())
        );

        ebootPanel.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>                        

    private void inputTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTextFieldActionPerformed

    private void outputDirTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputDirTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outputDirTextFieldActionPerformed

    private void inputBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputBrowseButtonActionPerformed
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);

        int returnVal = fc.showOpenDialog(EditorUI.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            log.append("Opening: " + file.getAbsolutePath() + "\n\n");

            inputTextField.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_inputBrowseButtonActionPerformed

    private void outputBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputBrowseButtonActionPerformed
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fc.showOpenDialog(EditorUI.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            log.append("Opening: " + file.getAbsolutePath() + "\n\n");

            outputDirTextField.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_outputBrowseButtonActionPerformed

    private void directoryBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directoryBrowseButtonActionPerformed
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fc.showOpenDialog(EditorUI.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            log.append("Opening: " + file.getAbsolutePath() + "\n\n");
        //  log.append("New Offsets of Specified Directory: \n" + newOffset(file.getAbsolutePath()) + "\n");

            directoryTextField.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_directoryBrowseButtonActionPerformed

    private void createFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createFileButtonActionPerformed
        if(!(inputTextField.getText().equals("")) && !(outputDirTextField.getText().equals("")) && !(outputFileTextField.getText().equals(""))) {
            try {
                createNewFile(inputTextField.getText(), outputDirTextField.getText() + "\\" + outputFileTextField.getText(), newOffset(directoryTextField.getText()));
            } catch (IOException | DecoderException ex) {
                Logger.getLogger(EditorUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            log.append("Finished Updated File!\n\n");
        }
        else
            log.append("ERROR: One or more fields have not been filled in\n\n");
    }//GEN-LAST:event_createFileButtonActionPerformed

    private void outputFileTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputFileTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outputFileTextFieldActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    public static String newOffset(String filePath) {

      Scanner scan = new Scanner(System.in);
      String usrFile;
      int fileSize;
      String outputStuff = "";
      int position = 0;
      String posHex  = "";
      String sizeHex = "";

	  for(int i=0; i<=84; i++){

		if (i >= 10)
	      	usrFile = Integer.toString(i);
	    else
	    	usrFile = "0" + i;

     	fileSize = (int)smallLength(filePath, usrFile);
     	if (fileSize < 16){
     		sizeHex = "0" + Integer.toHexString(fileSize);
     		sizeHex += "00";
     	}
     	else {
     		sizeHex = Integer.toHexString(fileSize);
     		sizeHex += "00";
     	}
     	if (position < 16){
     		posHex = "0" + Integer.toHexString(position);
     		posHex += "00";
     	}
     	else if (position < 256 && position >= 16){
     		posHex = Integer.toHexString(position);
     		posHex += "00";
     	}
     	else {
     		posHex = Integer.toHexString(position).substring(1);
     		posHex += ("0" + (position / 256));
     	}

//     	outputStuff += "*File " + i + "*\nPosition: " + posHex + "\nSize: " + sizeHex + "\n\n";
		outputStuff += posHex + sizeHex;
  		position += smallLength(filePath, usrFile);

	}
		return outputStuff;
   }

	public static long smallLength(String filePath, String usrFile)
	{
            File f = null;
            String path;
            long len = 0;
            boolean bool = false;

            try{
               // create new file
               f = new File(filePath.replace('\\', '/') + "/ID000" + usrFile);

               // true if the file path is a file, else false
               bool = f.exists();

               // if path exists
               if(bool)
               {
                  // returns the length in bytes
                  len = f.length();

                  // path
                  path = f.getPath();
               }
            }catch(Exception e){
               // if any error occurs
               e.printStackTrace();
            }
            return len / 2048;
        }

        public static void createNewFile(String sourcePath, String destinationPath, String toWrite) throws FileNotFoundException, IOException, DecoderException
        {
            File source = new File(sourcePath);
            File destination = new File(destinationPath);
            FileUtils.copyFile(source, destination);

            RandomAccessFile file = new RandomAccessFile(destination, "rw");
            file.seek(1331200);
            byte[] writeBytes;
            writeBytes = Hex.decodeHex(toWrite.toCharArray());
            for(byte temp: writeBytes)
                file.writeByte(temp);
            file.close();
        }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new EditorUI().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(EditorUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createFileButton;
    private javax.swing.JButton directoryBrowseButton;
    private javax.swing.JLabel directoryLabel;
    private javax.swing.JTextField directoryTextField;
    private javax.swing.JPanel ebootPanel;
    private javax.swing.JButton inputBrowseButton;
    private javax.swing.JLabel inputLabel;
    private javax.swing.JTextField inputTextField;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea log;
    private javax.swing.JButton outputBrowseButton;
    private javax.swing.JLabel outputDirLabel;
    private javax.swing.JTextField outputDirTextField;
    private javax.swing.JLabel outputFileLabel;
    private javax.swing.JTextField outputFileTextField;
    private javax.swing.JPanel scriptPanel;
    // End of variables declaration//GEN-END:variables
}
